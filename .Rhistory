paste0("Outputs/Tables/", Sys.Date())
# names(nowcast_list)<-agregado
dir.create(path = paste0("Outputs/Tables/", Sys.Date()))
#!/usr/bin/env Rscript
if(!require ('tidyverse')) {install.packages('tidyverse')};library('tidyverse')
if(!require ('data.table')) {install.packages('data.table')};library('data.table')
# if(!require ('NobBS')) {install.packages('NobBS')};library('NobBS')
if(!require ('scales')) {install.packages('scales')};library('scales')
# if(!require ('forecast')) {install.packages('forecast')};library('forecast')
if(!require ('purrr')) {install.packages('purrr')};library('purrr')
if(!require ('readr')) {install.packages('readr')};library('readr')
if(!require ('vroom')) {install.packages('vroom')};library('vroom')
if(!require ('INLA')) {install.packages('INLA')};library('INLA')
# Fixando o diretório de trabalho
setwd(gsub("RESPIRATORIAS.*","RESPIRATORIAS/COVID_R/",getwd()))
getwd()
source("Nowcasting/nowcasting_INLA_secretarias-main/nowcasting_fun.r")
source("Nowcasting/Scripts/nowcasting_inla.R")
source("Nowcasting/Scripts/dados_w.R")
## Loading a base do dia
load("boletim.rData")
## Nivel de agregação, padrão usado de GVEs
agregado <- unique(boletim$`17DRS`)
agregado<-sort(agregado)
## Objetos de armazenamento de plots e a estimativa de nowcasting
# plot_now<-vector("list", length(agregado))
# names(plot_now)<-agregado
nowcast_list<-vector("list", length(agregado))
# names(nowcast_list)<-agregado
dir.create(path = paste0("Outputs/Tables/", Sys.Date()))
View(cria.tweet.1)
View(nowcast_list)
#!/usr/bin/env Rscript
if(!require ('tidyverse')) {install.packages('tidyverse')};library('tidyverse')
if(!require ('data.table')) {install.packages('data.table')};library('data.table')
if(!require ('scales')) {install.packages('scales')};library('scales')
if(!require ('purrr')) {install.packages('purrr')};library('purrr')
if(!require ('readr')) {install.packages('readr')};library('readr')
if(!require ('vroom')) {install.packages('vroom')};library('vroom')
if(!require ('INLA')) {install.packages('INLA')};library('INLA')
# Fixando o diretório de trabalho
setwd(gsub("RESPIRATORIAS.*","RESPIRATORIAS/COVID_R/",getwd()))
getwd()
source("Nowcasting/nowcasting_INLA_secretarias-main/nowcasting_fun.r")
source("Nowcasting/Scripts/nowcasting_inla.R")
source("Nowcasting/Scripts/dados_w.R")
## Loading a base do dia
load("boletim.rData")
## Nivel de agregação, padrão usado de GVEs
agregado <- unique(boletim$`17DRS`)
agregado<-sort(agregado)
## Objetos de armazenamento de plots e a estimativa de nowcasting
nowcast_list<-vector("list", length(agregado))
## Cria o diretório do run com a data do dia
if(!dir.exists(paste0("Nowcasting/Outputs/Tables/", Sys.Date()))){
dir.create(path = paste0("Nowcasting/Outputs/Tables/", Sys.Date()))
}
i=1
print(paste0("Started Nowcasting for ", agregado[i], sep = " "))
## Filtrando no nível de agregação
dados_covid <- boletim %>%
filter(classi == 'COVID-19')  %>%
filter(`17DRS` == agregado[i])
## Organizando no formato para Nowcasting
dados_w<-dados.w(dados_covid)
## Summary para entrada no Nowcasting
dados_w.plot_total<-dados_w %>%
group_by(DT_SIN_PRI) %>%
tally()
# Salvando curvas
vroom_write(dados_w.plot_total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"dados_w_plot_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"dados_w_plot_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"
)
paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_")
# Salvando curvas
vroom_write(dados_w.plot_total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
# Salvando curvas
vroom_write(dados_w.plot_total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_total_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Summary para entrada no Nowcasting por idade
dados_w.plot_age<-dados_w %>%
group_by(DT_SIN_PRI, fx_etaria) %>%
tally()
## Salvando curvas por idade
vroom_write(dados_w.plot_age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_age_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Função de Nowcasting
nowcast_list[[i]] <- nowcasting_inla(boletim = dados_covid)
## Dando stamp do nível de agregação
nowcast_list[[i]]$total$DRS<-agregado[i]
nowcast_list[[i]]$age$DRS<-agregado[i]
View(nowcast_list)
## Salvando Nowcasting Total
vroom_write(nowcast_list[[i]]$total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"nowcasting_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list[[i]]$age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"nowcasting_age_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
print(paste0("Finished Nowcasting for ", agregado[i], sep = " "))
## Salvando Nowcasting Total
vroom_write(nowcast_list[[i]]$total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_total_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list[[i]]$age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_age_",
Sys.Date(),
agregado[i],
".csv.xz", sep = "_"))
## Salvando Nowcasting Total
vroom_write(nowcast_list[[i]]$total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_total_",
Sys.Date(),
"_",
agregado[i],
".csv.xz", sep = "_"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list[[i]]$age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_age_",
Sys.Date(),
"_",
agregado[i],
".csv.xz", sep = "_"))
## Salvando Nowcasting Total
vroom_write(nowcast_list[[i]]$total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_total_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list[[i]]$age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_age_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
#!/usr/bin/env Rscript
if(!require ('tidyverse')) {install.packages('tidyverse')};library('tidyverse')
if(!require ('data.table')) {install.packages('data.table')};library('data.table')
if(!require ('scales')) {install.packages('scales')};library('scales')
if(!require ('purrr')) {install.packages('purrr')};library('purrr')
if(!require ('readr')) {install.packages('readr')};library('readr')
if(!require ('vroom')) {install.packages('vroom')};library('vroom')
if(!require ('INLA')) {install.packages('INLA')};library('INLA')
# Fixando o diretório de trabalho
setwd(gsub("RESPIRATORIAS.*","RESPIRATORIAS/COVID_R/",getwd()))
getwd()
source("Nowcasting/nowcasting_INLA_secretarias-main/nowcasting_fun.r")
source("Nowcasting/Scripts/nowcasting_inla.R")
source("Nowcasting/Scripts/dados_w.R")
## Loading a base do dia
load("boletim.rData")
## Nivel de agregação, padrão usado de GVEs
agregado <- unique(boletim$`17DRS`)
agregado<-sort(agregado)
## Objetos de armazenamento de plots e a estimativa de nowcasting
nowcast_list<-vector("list", length(agregado))
## Cria o diretório do run com a data do dia
if(!dir.exists(paste0("Nowcasting/Outputs/Tables/", Sys.Date()))){
dir.create(path = paste0("Nowcasting/Outputs/Tables/", Sys.Date()))
}
gc()
## Looping para rodar o nowcasting para cada nível
for (i in seq(1:length(agregado))) {
print(paste0("Started Nowcasting for ", agregado[i], sep = " "))
## Filtrando no nível de agregação
dados_covid <- boletim %>%
filter(classi == 'COVID-19')  %>%
filter(`17DRS` == agregado[i])
## Organizando no formato para Nowcasting
dados_w<-dados.w(dados_covid)
## Summary para entrada no Nowcasting
dados_w.plot_total<-dados_w %>%
group_by(DT_SIN_PRI) %>%
tally()
# Salvando curvas
vroom_write(dados_w.plot_total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_total_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Summary para entrada no Nowcasting por idade
dados_w.plot_age<-dados_w %>%
group_by(DT_SIN_PRI, fx_etaria) %>%
tally()
## Salvando curvas por idade
vroom_write(dados_w.plot_age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_age_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Função de Nowcasting
nowcast_list[[i]] <- nowcasting_inla(boletim = dados_covid)
## Dando stamp do nível de agregação
nowcast_list[[i]]$total$DRS<-agregado[i]
nowcast_list[[i]]$age$DRS<-agregado[i]
## Salvando Nowcasting Total
vroom_write(nowcast_list[[i]]$total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_total_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list[[i]]$age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_age_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
print(paste0("Finished Nowcasting for ", agregado[i], sep = " "))
}
View(nowcast_list)
gc()
## Nivel de agregação
agregado <- unique(boletim$`17DRS`)
agregado<-sort(agregado)
## Objetos de armazenamento de plots e a estimativa de nowcasting
nowcast_list_total<-vector("list", length(agregado))
nowcast_list_age<-vector("list", length(agregado))
## Cria o diretório do run com a data do dia
if(!dir.exists(paste0("Nowcasting/Outputs/Tables/", Sys.Date()))){
dir.create(path = paste0("Nowcasting/Outputs/Tables/", Sys.Date()))
}
## Looping para rodar o nowcasting para cada nível
for (i in seq(1:length(agregado))) {
print(paste0("Started Nowcasting for ", agregado[i], sep = " "))
## Filtrando no nível de agregação
dados_covid <- boletim %>%
filter(classi == 'COVID-19')  %>%
filter(`17DRS` == agregado[i])
## Organizando no formato para Nowcasting
dados_w<-dados.w(dados_covid)
## Summary para entrada no Nowcasting
dados_w.plot_total<-dados_w %>%
group_by(DT_SIN_PRI) %>%
tally()
# Salvando curvas
vroom_write(dados_w.plot_total,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_total_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Summary para entrada no Nowcasting por idade
dados_w.plot_age<-dados_w %>%
group_by(DT_SIN_PRI, fx_etaria) %>%
tally()
## Salvando curvas por idade
vroom_write(dados_w.plot_age,
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/dados_w_plot_age_",
Sys.Date(),
"-",
agregado[i],
".csv.xz"))
## Função de Nowcasting
nowcast_list[[i]] <- nowcasting_inla(boletim = dados_covid)
## Dando stamp do nível de agregação
nowcast_list_total[[i]]$DRS<-agregado[i]
nowcast_list_age[[i]]$DRS<-agregado[i]
## Salvando Nowcasting Total
vroom_write(nowcast_list_total[[i]],
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_total_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
## Salvando Nowcasting por idade
vroom_write(nowcast_list_age[[i]],
file = paste0("Nowcasting/Outputs/Tables/",
Sys.Date(),
"/nowcasting_age_",
Sys.Date(),
"_",
agregado[i],
".csv.xz"))
print(paste0("Finished Nowcasting for ", agregado[i], sep = " "))
}
View(dados.w)
View(dados.atuais)
View(dados.w)
View(dados.w)
View(nowcasting.summary)
source("G:/CCD/CVE/RESPIRATORIAS/COVID_R/Nowcasting/Scripts/nowcasting_inla.R", encoding = 'UTF-8')
source("G:/CCD/CVE/RESPIRATORIAS/COVID_R/Nowcasting/Scripts/nowcasting_inla.R")
source("G:/CCD/CVE/RESPIRATORIAS/COVID_R/Nowcasting/Scripts/nowcasting_inla.R")
