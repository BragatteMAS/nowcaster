[{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Forecasting","text":"Nowcasting estimation events already started yet reported. epidemiology, events like cases onset first symptoms yet captured notification system. Forecasting simply estimation events, yet started onset first symptoms, .e. cases probable incubation period. data structure databases basically cases date onset greater present date. language delay triangle, forecasting estimate part completely unobserved.","code":""},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"parameter-k-0","dir":"Articles","previous_headings":"","what":"Parameter K > 0","title":"Forecasting","text":"nowcasting_inla function functional parameter flags model parsed inla construct delay triangle dates greater present date. done setting K parameter value greater 0, like $K = 1,2,3, $. proceed example nowcasting. forecasting done nowcasting article Nowcasting decision making. First, cut lazydata loaded namespace package date interest, details cut date see article Nowcasting decision making. parse nowcasting_inla function date onset date report columns, flag returning data.frame cases counts week setting K parameter desired forecasting horizon, forecast one week ahead present date. forecasting, construct case counts curve lazydata, using internal function dados.w_no_age, construct curve summarizing case counts date onset first symptoms present database.  Now, forecast one week ahead just flag K = 1, proceed normal nowcasting calling, code : visualize forecast plot observed curve nowcasting forecasting estimate, change colors part. plot together nowcasting forecasting estimate, curve observed one year later, validate estimate done.","code":"library(tidyverse) library(lubridate) library(nowcaster)  ## To see Nowcasting as if we were on the verge of rise in the curve data(\"sragBH\") srag_now<-sragBH |>    filter(DT_DIGITA <= \"2020-07-04\")  data_by_week<-dados.w_no_age(dataset = srag_now,                               date_onset = DT_SIN_PRI,                               date_report = DT_DIGITA) |>    group_by(date_onset) |>    tally()  data_by_week |>     ggplot(aes(x = date_onset,               y = n))+   geom_line()+   theme_bw()+   labs(x = 'Date of onset of symptons',         y = 'Nº Cases')+   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks') nowcasting_bh_no_age <- nowcasting_inla(dataset = srag_now,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T,                                          K = 1) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #>   date_report date_onset Delay #>   <date>      <date>     <dbl> #> 1 2020-02-29  2020-02-08     3 #> 2 2020-02-01  2020-01-18     2 #> 3 2020-04-11  2020-03-28     2 #> 4 2020-03-28  2020-03-21     1 #> 5 2020-04-11  2020-03-14     4 #> 6 2020-04-18  2020-04-04     2 ## Nowcasting estimate filtering nowcasting_estimate<-nowcasting_bh_no_age$total |>    filter(dt_event <= \"2020-06-27\") ## Forecasting estimate filtering forecasting_estimate<-nowcasting_bh_no_age$total |>    filter(dt_event >= \"2020-06-27\")  ## One year after observed data_one_year_after<-sragBH %>%   filter(DT_SIN_PRI <= \"2020-07-16\") %>%    mutate(     D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, \"%w\"))   ) %>%    group_by(D_SIN_PRI_2) %>%    tally()   ## Plotting nowcasting_estimate |>    ggplot(aes(x = dt_event, y = Median, col = \"Nowcasting\"))+   geom_line()+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line(data = forecasting_estimate,              aes(x = dt_event, y = Median, col = \"Forecasting\"))+   geom_ribbon(data = forecasting_estimate,                aes(ymin = LI, ymax = LS, col = \"Forecasting\"),                alpha = 0.2,               show.legend = F)+   geom_line(data = data_by_week,              aes(date_onset, y = n, col = 'Observed'))+   geom_line(data = data_one_year_after,              mapping = aes(x = D_SIN_PRI_2, y = n,                            color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('orange','grey50', 'black', 'red'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')+   ylim(c(0, 6500))"},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"uncertainty-growth","dir":"Articles","previous_headings":"","what":"Uncertainty growth","title":"Forecasting","text":"try forecasting longer ahead present date, uncertaintiy grow. saw opening confidence intervals last graph. Although wide realized curve still falls inside , indicating assertative tendencey curve least. can taken support decision making planning ahead present date. forecasting horizon futher 1 week ahead, confidence interval wider , help little can try forecasting imposed structured data. Now, forecasting parsing columns age nowcasting function, can reduce openning confidence interval. plot nowcasting estimate forecasting estimate :","code":"nowcasting_bh_age <- nowcasting_inla(dataset = srag_now,                                       date_onset = DT_SIN_PRI,                                       date_report = DT_DIGITA,                                       data.by.week = T,                                       K = 1,                                       age_col = Idade) head(nowcasting_bh_age$data) #> # A tibble: 6 × 5 #>   date_report date_onset Idade Delay fx_etaria #>   <date>      <date>     <dbl> <dbl> <fct>     #> 1 2020-02-29  2020-02-08    59     3 7         #> 2 2020-02-01  2020-01-18    79     2 9         #> 3 2020-04-11  2020-03-28    72     2 9         #> 4 2020-03-28  2020-03-21    82     1 10        #> 5 2020-04-11  2020-03-14    50     4 7         #> 6 2020-04-18  2020-04-04    74     2 9 ## Nowcasting estimate filtering nowcasting_estimate<-nowcasting_bh_age$total |>    filter(dt_event <= \"2020-06-27\") ## Forecasting estimate filtering forecasting_estimate<-nowcasting_bh_age$total |>    filter(dt_event >= \"2020-06-27\")  ## Plotting nowcasting_estimate |>    ggplot(aes(x = dt_event, y = Median, col = \"Nowcasting\"))+   geom_line()+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line(data = forecasting_estimate,              aes(x = dt_event, y = Median, col = \"Forecasting\"))+   geom_ribbon(data = forecasting_estimate,                aes(ymin = LI, ymax = LS, col = \"Forecasting\"),                alpha = 0.2,               show.legend = F)+   geom_line(data = data_by_week,              aes(date_onset, y = n, col = 'Observed'))+   geom_line(data = data_one_year_after,              mapping = aes(x = D_SIN_PRI_2, y = n,                            color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('orange','grey50', 'black', 'red'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')+   ylim(c(0, 6500))"},{"path":"https://covid19br.github.io/nowcaster/articles/nowcaster.html","id":"first-example-on-lazydata","dir":"Articles","previous_headings":"","what":"First example on LazyData","title":"Get Started","text":"package loaded disponibilize LazyData file, sariBH, annonymized records Severe Acute Respiratory Illness notified city Belo Horizonte, since March 2020 April 2022. load basically write: take look data: data.frame 7 variables 65,404 observations. make use first two columns, “DT_SIN_PRI” (date onset symptoms) “DT_DIGITA” (recording date) well column “Idade” (age years) make age structured nowcasting. call function straightforward, simply needs dataset input, LazyData loaded namespace package. function 3 mandatory parameters, dataset parsing dataset nowcasted, date_onset parsing column name date onset symptoms date_report parses column name date report cases. columns “DT_SIN_PRI” “DT_DIGITA”, respectively. calling return first element nowcasting estimate Confidence Interval (CI) two different Credible interval, LIb LSb max min CI, respectively, credibility 50% LI LS max min CI, respectively, credibility 95%. second element returns data grouped summarized give epidemic curve, can take look element.  element groped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example estimate compares observed curve, plot estimate epidemiological curve together.  example estimate done without considering type strucuture data, first assumption nowcasting.","code":"library(nowcaster) # Loading Belo Horizonte SARI dataset data(sragBH) head(sragBH) #>   DT_SIN_PRI  DT_DIGITA CLASSI_FIN EVOLUCAO CO_MUN_RES Idade fx_etaria #> 1 2020-02-11 2020-03-05          4        1     310620    59   50 - 59 #> 2 2020-01-21 2020-02-06          4        1     310620    79   70 - 79 #> 3 2020-03-30 2020-04-17          4        1     310620    72   70 - 79 #> 4 2020-03-26 2020-04-02          4        1     310620    82      80 + #> 5 2020-03-20 2020-04-13          4        1     310620    50   50 - 59 #> 6 2020-04-07 2020-04-22          5        1     310620    74   70 - 79 nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T) head(nowcasting_bh_no_age$total) #> # A tibble: 6 × 7 #>    Time dt_event   Median    LI    LS   LIb   LSb #>   <int> <date>      <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    17 2021-12-13    625   621  632    623  627  #> 2    18 2021-12-20    695   687  707    692  698  #> 3    19 2021-12-27    812   800  829.   808  817  #> 4    20 2022-01-03    887   872  907    881  893  #> 5    21 2022-01-10    818   798  845    811  825. #> 6    22 2022-01-17    631   610  660    623  641 library(ggplot2) library(dplyr)  dados_by_week <- nowcasting_bh_no_age$data |>    filter(date_onset >= (Sys.Date()-270)) |>    group_by(date_onset) |>    summarise(n = n())  dados_by_week |>    ggplot()+   geom_line(data = dados_by_week,              aes(date_onset,                  y = n,                  col = 'Observed'))+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases') nowcasting_bh_no_age$total |>    ggplot(aes(x = dt_event, y = Median,               col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset,                  y = n,                  col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/nowcasting_importance.html","id":"nowcasting-as-a-tool-to-support-decision-making","dir":"Articles","previous_headings":"","what":"Nowcasting as a tool to support decision making","title":"Nowcasting for decision making","text":"Nowcasting rising curve curve moment can give quantitative support decision making, public health crises, needed way anticipate, least, happening moment. Nowcasting tool type questioning can gives insights data support nedded decisions. start section cutting original data moment apparent decaying SARI hospitalisation, city Belo Horizonte, prompt starting response Covid=19 pandemic. pressure health system took time rest country, data time showing decay. filter cases entered 4th July 2020 date digitasation, date cases shows database.  filtered data, estimate cases already started date onset symptons yet reported, database. just pass nowcasting_inla function, dataset filtered, flag columns date_onset date_report, add flag function return back epidemic curve epiweek. see result nowcasting estimate take look intermediate part process nowcasting, delay triangle, sets objects nowcasting. delay triangle table unique amount delay, (.e. integer numbers days weeks) passed date onset date report spread date onset. part closer present less counts lower amount delay, trivial due , system takes time process cases, newer cases lesser older ones, already time processed. data weekly format mount counts cases amount delay. tabling delay amount data onset first symptoms, see pattern delay cases. just look amount cases 30 weeks delay less, default maximum delay considered nowcasting estimation. can changed parameter Dmax. element grouped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example , plot estimate epidemiological curve together.  expected, nowcasting estimated rising curve observed decaying. Adding plot actually happened period, data inserted posterioly period nowcasting estimated rising curve SARI hospitalizations.  end first simple example estimating already started events yet reported (.e. nowcasting). relevance nowcasting public health decision given understading present databases picture real time situation. graph can help policy makers decisions takes face rising curve hospitalisations.","code":"library(tidyverse) library(lubridate) library(nowcaster)  ## To see Nowcasting as if we were on the verge of rise in the curve data(\"sragBH\") srag_now<-sragBH |>    filter(DT_DIGITA <= \"2020-07-04\")  data_by_week<-dados.w_no_age(dataset = srag_now,                           date_onset = DT_SIN_PRI,                           date_report = DT_DIGITA) |>    group_by(date_onset) |>    tally()  data_by_week |>     ggplot(aes(x = date_onset,               y = n))+   geom_line()+   theme_bw()+   labs(x = 'Date of onset of symptons',         y = 'Nº Cases')+   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks') nowcasting_bh_no_age <- nowcasting_inla(dataset = srag_now,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #>   date_report date_onset Delay #>   <date>      <date>     <dbl> #> 1 2020-02-29  2020-02-08     3 #> 2 2020-02-01  2020-01-18     2 #> 3 2020-04-11  2020-03-28     2 #> 4 2020-03-28  2020-03-21     1 #> 5 2020-04-11  2020-03-14     4 #> 6 2020-04-18  2020-04-04     2 data_triangle <- nowcasting_bh_no_age$data |>    filter(Delay < 30) |>    arrange(desc(Delay)) delay_triangle<-table(data_triangle$date_onset,                        rev(data_triangle$Delay),                       dnn = list(\"Date of Onset\", \"Delay\")) delay_triangle #>              Delay #> Date of Onset   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 #>    2019-12-28   5  13   1   1   0   0   0   1   0   0   0   0   0   0   0   0 #>    2020-01-04   3  15   1   0   0   1   0   0   0   0   0   0   0   0   0   0 #>    2020-01-11   1  13   4   1   0   0   0   0   0   0   1   0   0   0   0   0 #>    2020-01-18   5  17   3   0   0   0   0   0   0   0   1   0   0   0   1   0 #>    2020-01-25   5   7   5   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-02-01   3  12   3   1   0   0   0   0   0   0   0   1   0   0   0   0 #>    2020-02-08   7  11   4   0   0   1   0   0   0   0   0   0   0   0   0   0 #>    2020-02-15   7  12   2   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-02-22  10  24   4   1   0   1   0   0   1   0   0   0   0   0   0   0 #>    2020-02-29  15  26   2   0   1   0   1   0   1   0   0   0   0   0   0   0 #>    2020-03-07  39  81   7   3   1   1   0   1   1   0   0   0   0   0   0   0 #>    2020-03-14  90 188  34  12   6   4   1   0   1   1   1   0   0   0   0   0 #>    2020-03-21  88 128  75  28  16   9   3   1   0   1   2   0   0   0   0   0 #>    2020-03-28  59 124  57  19   6   2   3   8   4   4   3   0   0   1   0   0 #>    2020-04-04  36  88  59  33  13   6   2   2   2   5   0   0   2   0   0   1 #>    2020-04-11  30 131  42  24  14   5   9   3   3   2   1   1   3   0   0   1 #>    2020-04-18  30 118  68  29  11  12   6   2   5   2   1   1   0   0   0   0 #>    2020-04-25  28 107  83  30  21  12   2   8   4   0   3   1   1   2   0   0 #>    2020-05-02  15 114  70  29   7  11   8  12   5   4   4   2   2   1   1   0 #>    2020-05-09  22 108  84  36  25  20   9   6   8   4   7   1   1   0   0   0 #>    2020-05-16  18 122  92  35  26  14   8  10   8   1   2   1   0   1   0   0 #>    2020-05-23   0 166  88  36  26  15  13   8   6   4   3   2   0   1   1   0 #>    2020-05-30   0 302 132  30  17  17   7   9   7   2   2   2   2   1   1   1 #>    2020-06-06   0 271 161  59  27  17   5   7   3   3   0   1   2   0   0   0 #>    2020-06-13   0 223 239  78  41  26  16  10   5   5   4   1   1   2   0   0 #>    2020-06-20   0   0 190  91  48  35  19  21   5   7   3   3   0   0   2   0 #>    2020-06-27   0   0   0   0   0   3  30  14  14   6   2   3   4   2   2   0 #>              Delay #> Date of Onset  16  17  18  19  20 #>    2019-12-28   0   0   0   0   0 #>    2020-01-04   0   0   0   0   0 #>    2020-01-11   0   0   0   0   0 #>    2020-01-18   0   0   0   0   0 #>    2020-01-25   0   0   0   0   0 #>    2020-02-01   0   0   0   0   0 #>    2020-02-08   0   0   0   0   0 #>    2020-02-15   0   0   0   0   0 #>    2020-02-22   0   0   0   0   0 #>    2020-02-29   0   0   0   0   0 #>    2020-03-07   0   0   0   0   0 #>    2020-03-14   0   0   0   1   0 #>    2020-03-21   0   0   0   0   0 #>    2020-03-28   0   0   0   0   0 #>    2020-04-04   0   0   0   0   0 #>    2020-04-11   0   0   0   0   0 #>    2020-04-18   0   0   0   0   0 #>    2020-04-25   0   0   0   0   0 #>    2020-05-02   0   0   0   0   0 #>    2020-05-09   0   0   0   0   0 #>    2020-05-16   0   0   0   0   0 #>    2020-05-23   0   1   0   0   1 #>    2020-05-30   0   0   0   0   0 #>    2020-06-06   0   0   0   0   0 #>    2020-06-13   0   0   0   0   0 #>    2020-06-20   0   0   0   0   0 #>    2020-06-27   1   0   3   0   0 library(ggplot2)  dados_by_week <- nowcasting_bh_no_age$data %>%    group_by(date_onset) %>%    summarise(n = n())  nowcasting_bh_no_age$total |>    ggplot(aes(x = dt_event, y = Median,               col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset, y = n,                  col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases') nowcasting_bh_no_age$total %>%    ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset, y = n, col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   geom_line( data = sragBH %>%                filter(DT_SIN_PRI <= \"2020-07-04\") %>%                 mutate(                  D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, \"%w\"))                ) %>%                 group_by(D_SIN_PRI_2) %>%                 tally(),               mapping = aes(x = D_SIN_PRI_2, y = n,                             color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black', 'red'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/structured_data.html","id":"non-structured-data","dir":"Articles","previous_headings":"","what":"Non-structured data","title":"Structured data","text":"Th Get Started example non-strucutured data estimation, give detailed description type data can change nowcasting estimation. Now call nowcasting function, default parametrization take data estimate non-structured data form. estimate fits negative binomial distribution, \\(NegBinom(\\lambda_{t,d}, \\phi)\\), cases count time \\(t\\) delay \\(d\\), \\(\\phi\\) dispersion parameter. rate \\(\\lambda_{t,d}\\) parameterized log-linear format constant term added structured delay random effects structured time random effects. Hence, model given following: \\[\\begin{equation} Y_{t,d} \\sim NegBinom(\\lambda_{t,d}, \\phi), \\\\ \\log(\\lambda_{t,d}) = \\alpha + \\beta_t + \\gamma_d, \\\\ t=1,2,\\ldots,T, \\\\ d=1,2,\\ldots,D, \\end{equation}\\] intercept \\(\\alpha\\) follows Gaussian distribution large variance, \\(\\beta_t\\) follows second order random walk precision \\(\\tau_\\beta\\), \\(\\gamma_d\\) first-order random walk precision \\(\\tau_\\gamma\\). model completed INLA default prior distributions \\(\\phi\\), \\(\\tau_\\beta\\), \\(\\tau_\\gamma\\). See nbinom, rw1 rw2 INLA help pages. call function straightforward, simply needs dataset input, LazyData loaded namespace package. function 3 mandatory parameters, dataset parsing dataset nowcasted, date_onset parsing column name date onset symptoms date_report parses column name date report cases. columns “DT_SIN_PRI” “DT_DIGITA”, respectively. calling return nowcasting estimate Confidence Interval (CI) two different Credible interval, LIb LSb max min CI, respectively, credibility 50% LI LS max min CI, respectively, credibility 95%. nowcasting_inla option return curve nowcasting estimate set window action model, data..week parameter flagged TRUE returns second element output list summarized data week. element counts cases amount delay. known delay triangle, table delay amount data onset first symptoms, can see pattern delay cases. just look amount cases 30 weeks delay less, default maximum delay considered nowcasting estimation. element groped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example , plot estimate epidemiological curve together.","code":"nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA) head(nowcasting_bh_no_age$total) #> # A tibble: 6 × 7 #>    Time dt_event   Median    LI    LS   LIb   LSb #>   <int> <date>      <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    17 2021-12-13    625  621   633    623  627  #> 2    18 2021-12-20    695  688.  708    692  698. #> 3    19 2021-12-27    812  801   830    807  817  #> 4    20 2022-01-03    886  871   907.   880  893  #> 5    21 2022-01-10    819  798   845    811  826  #> 6    22 2022-01-17    632  609   660    623  641 nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #>   date_report date_onset Delay #>   <date>      <date>     <dbl> #> 1 2020-02-24  2020-02-03     3 #> 2 2020-01-27  2020-01-13     2 #> 3 2020-04-06  2020-03-23     2 #> 4 2020-03-23  2020-03-16     1 #> 5 2020-04-06  2020-03-09     4 #> 6 2020-04-13  2020-03-30     2 library(dplyr)  data_triangle <- nowcasting_bh_no_age$data |>    filter(Delay < 30) |>    arrange(desc(Delay)) delay_triangle<-table(data_triangle$date_onset,                        rev(data_triangle$Delay),                       dnn = list(\"Date of Onset\", \"Delay\")) head(delay_triangle) #>              Delay #> Date of Onset  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 #>    2019-12-23  3  4  7  4  0  1  1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0 #>    2019-12-30  1  4 10  4  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>    2020-01-06  0  3  5  6  0  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0 #>    2020-01-13  0  5 11  6  0  3  0  0  0  0  0  0  0  0  0  0  1  1  0  0  0  0 #>    2020-01-20  1  5  3  3  0  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>    2020-01-27  0  7  4  5  0  2  1  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0 #>              Delay #> Date of Onset 22 23 24 25 26 27 28 29 #>    2019-12-23  0  0  0  0  0  0  0  0 #>    2019-12-30  0  0  0  0  0  0  0  0 #>    2020-01-06  0  0  0  0  0  0  0  0 #>    2020-01-13  0  0  0  0  0  0  0  0 #>    2020-01-20  0  0  0  0  0  0  0  0 #>    2020-01-27  0  0  0  0  0  0  0  0 library(ggplot2)  dados_by_week <- nowcasting_bh_no_age$data %>%    filter(date_onset >= (Sys.Date()-270)) %>%    group_by(date_onset) %>%    summarise(n = n())  nowcasting_bh_no_age$total |>    ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +   geom_line(data = dados_by_week, aes(date_onset, y = n, col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA), alpha = 0.2, show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'), name = '')+   scale_x_date(date_breaks = '2 weeks', date_labels = '%V/%y', name = 'Date in Weeks')+   labs(x = '', y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/structured_data.html","id":"structured-data-age","dir":"Articles","previous_headings":"","what":"Structured data, Age","title":"Structured data","text":"structured data nowcasting_inla() fits Negative binomial distribution cases count time \\(t\\) delay \\(d\\). Differently, non-structured case model now gives random effects delay distribution time distribution age-class chosen user break data. model form now: \\[\\begin{equation}Y_{t,d,} \\sim  NegBinom(\\lambda_{t,d,}, \\phi), \\\\ \\log(\\lambda_{t,d,}) =  \\alpha_a + \\beta_{t,} + \\gamma_{d,}, \\\\ \\quad t=1,2,\\ldots,T, \\\\ d=1,2,\\ldots,D, \\\\ =1,2,\\ldots,, \\end{equation}\\] age class, \\(\\), intercept \\(\\alpha_a\\) following Gaussian distribution large variance, time-age random effects, \\(\\beta_{t,}\\), follow joint multivariate Gaussian distribution separable variance components independent Gaussian term age classes precision \\(\\tau_{age,\\beta}\\) second order random walk term time precision \\(\\tau_{\\beta}\\). Analogously, delay-age random effects, \\(\\gamma_{d,}\\), follow joint multivariate Gaussian distribution separable variance components independent Gaussian term age classes precision \\(\\tau_{age,\\gamma}\\) first order random walk term time precision \\(\\tau_{\\gamma}\\). model completed INLA default prior distributions \\(\\phi\\), \\(\\tau_{age,\\beta}\\), \\(\\tau_{age,\\gamma}\\), \\(\\tau_{\\beta}\\) \\(\\tau_\\gamma\\). See nbinom, iid, rw1 rw2 INLA help pages. new model corrects delay taking account effects age classes interactions age class time also delay. Now model needs flag indicating column dataset used break data age classes age classes split. given parameters age_col bins_age. pass three additional parameters, data..week return epidemiological curve window action nowcasting estimate return.age inform desire nowcasting result two ways, total aggregation estimate age-stratified estimate. calling function following form: estimates returned nowcasting_inla form non-structured case. nowcasting estimates, returns data.frame posterior edian 50% 95% credible intervals, (LIb LSb) (LI LS) respectively.","code":"nowcasting_bh_age <- nowcasting_inla(dataset = sragBH,                                     bins_age = \"10 years\",                                    data.by.week = T,                                     date_onset = DT_SIN_PRI,                                     date_report = DT_DIGITA,                                    age_col = Idade) library(ggplot2)  dados_by_week <- nowcasting_bh_age$data |>    filter(date_onset >= (Sys.Date()-270)) |>     group_by(date_onset) %>%    summarise(n = n())   nowcasting_bh_age$total |>    ggplot(aes(x = dt_event, y = Median, col = 'Median'))+   geom_line()+   geom_line(data = dados_by_week, aes(date_onset, y = n))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = 'IC'), alpha = 0.2)+   theme_bw()+   theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90))+   scale_color_manual(values = c('grey90', 'black'), name = '')+   scale_x_date(date_breaks = '2 weeks', date_labels = '%V/%y', name = 'Date in Weeks')+   labs(x = '', y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Leonardo Bastos. Author. Rafael Lopes. Author, maintainer.","code":""},{"path":"https://covid19br.github.io/nowcaster/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bastos L, Lopes R (2022). nowcaster: Estimate yet reported data delay distribution already onset data. R package version 0.2.0, https://covid19br.github.io/nowcaster.","code":"@Manual{,   title = {nowcaster: Estimate not yet reported data from a delay distribution of already onset data},   author = {Leonardo Bastos and Rafael Lopes},   year = {2022},   note = {R package version 0.2.0},   url = {https://covid19br.github.io/nowcaster}, }"},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"nowcaster--","dir":"","previous_headings":"","what":"Estimate not yet reported data from a delay distribution of already onset data","title":"Estimate not yet reported data from a delay distribution of already onset data","text":"nowcaster R package “nowcasting” epidemiological time-series. Every single system notification intrinsic delay, nowcaster can estimate many counts epidemiological data interest (.e., daily cases deaths counts) fitting negative binomial model time steps delay onset date event, (.e., date first symptoms cases date occurrence death) date report (.e., date notification case death). nowcaster based R-INLA INLA packages “Integrated Nested Laplace Approximation” algorithm Bayesian inference. INLA fast alternative others methods Bayesian inference like MCMC. introduction INLA can found . nowcaster build epidemiological emergency use, constructed Brazilian Severe Acute Respiratory Illness (SARI) surveillance database (SIVEP-Gripe).","code":""},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Estimate not yet reported data from a delay distribution of already onset data","text":"installing package certify active installation INLA, can run follwing code: want detail possible installations INLA, please refer official page package. proper INLA installation install nowcaster package simply run code R:","code":"install.packages(\"INLA\",                   repos=c(getOption(\"repos\"),                   INLA=\"https://inla.r-inla-download.org/R/stable\"),                    dep=TRUE) if( !require(nowcaster, quietly = T) ){   devtools::install_github(\"https://github.com/covid19br/nowcaster\") }"},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":null,"dir":"Reference","previous_headings":"","what":"Dados_w — dados.w","title":"Dados_w — dados.w","text":"Dados_w","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dados_w — dados.w","text":"","code":"dados.w(   dataset,   trim.data,   bins_age = c(\"SI-PNI\", \"10 years\", \"5 years\", bins_age),   date_onset,   date_report,   age_col )"},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dados_w — dados.w","text":"dataset dataset formatted data week trim.data much trim data? bins_age Bins age cu data, parsing nowcasting_inla age_col Age column  cut data age classes","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dados_w — dados.w","text":"Data weeks","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — dados.w_no_age","title":"Title — dados.w_no_age","text":"Title","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — dados.w_no_age","text":"","code":"dados.w_no_age(dataset, trim.data, date_onset, date_report)"},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — dados.w_no_age","text":"dataset dataset formatted data week trim.data much trim data?","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — dados.w_no_age","text":"Data weeks","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting.summary — nowcasting.summary","title":"nowcasting.summary — nowcasting.summary","text":"nowcasting.summary","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting.summary — nowcasting.summary","text":"","code":"nowcasting.summary(trajetory, age = F)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting.summary — nowcasting.summary","text":"age age data? Default FALSE, TRUE columns  age class, fx_etaria e fx_etaria.num trajectory Trajectories summarized, trajectory sample, Time, dt_event Y columns.","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_age — nowcasting_age","title":"nowcasting_age — nowcasting_age","text":"nowcasting_age","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_age — nowcasting_age","text":"","code":"nowcasting_age(dados.age)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_age — nowcasting_age","text":"dataset data pre formatted age classes delays week cases, delay triangle format","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_inla — nowcasting_inla","title":"nowcasting_inla — nowcasting_inla","text":"function estimate amount events already started yet notified. main use estimate many cases outbreak already started onset date symptons yet notified. nowcasting_inla, fits statistical distribution empirical distribution time delay onset date report date.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_inla — nowcasting_inla","text":"","code":"nowcasting_inla(   dataset,   bins_age = \"SI-PNI\",   trim.data,   Dmax = 15,   wdw = 30,   age_col,   date_onset,   date_report,   data.by.week = FALSE,   return.age = NULL,   silent = F,   K = 0,   trajectories = F,   ... )"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_inla — nowcasting_inla","text":"dataset Dataset least 3 columns, date onset, date report stratum. bins_age Age bins nowcasting, receive vector age bins, options , \"SI-PNI\", \"10 years\", \"5 years\". Default \"SI-PNI\". trim.data (days) Date trimmed data base, days. Default 0 days. Dmax (weeks) maximum amount weeks Nowcasting use estimation. Default 15 weeks. wdw (weeks) Window dates estimation act, .e., many past weeks nowcasting estimates. Default 30 weeks. age_col Column ages date_onset Column dates onset events, normally date onset first symptoms cases date_report Column dates report event, normally date digitation notification cases data..week returned whole time-series data. Default FALSE. return.age Depracted estimate Age returned. Default TRUE. silent Depracted warnings turned ? Default TRUE. K much weeks forecast ahead? Default K 0, forecasting ahead trajectories","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nowcasting_inla — nowcasting_inla","text":"list 2 elements, element data.frame nowcasting estimation, $1 'Total', $2 'Age'. data..week = TRUE, add $3 'dados' time-series wdw.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_no_age — nowcasting_no_age","title":"nowcasting_no_age — nowcasting_no_age","text":"nowcasting_no_age","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_no_age — nowcasting_no_age","text":"","code":"nowcasting_no_age(dados.age)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_no_age — nowcasting_no_age","text":"dataset data pre formatted age classes delays week cases, delay triangle format","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":null,"dir":"Reference","previous_headings":"","what":"SARI data from Belo Horizonte — sragBH","title":"SARI data from Belo Horizonte — sragBH","text":"dataset containing stuff need","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SARI data from Belo Horizonte — sragBH","text":"","code":"sragBH"},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SARI data from Belo Horizonte — sragBH","text":"data frame 65404 rows 7 variables: DT_SIN_PRI Date onset symptoms. DT_DIGITA Date recording. Idade Age years.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SARI data from Belo Horizonte — sragBH","text":"https://opendatasus.saude.gov.br/","code":""}]
